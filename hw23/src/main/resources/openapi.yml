openapi: 3.0.0
info:
  title: Endpoint для приема входящих сообщений
  description: |-
    API для приема входящих сообщений
  termsOfService: http://localhost/
  version: 1.0.0
servers:
  - url: http://localhost:8081/api/v1
tags:
  - name: order_action
    description: Действия над заказами
  - name: action
    description: Описания действий
  - name: key
    description: Ключ для верификации JWT
  - name: token
    description: Токен
  - name: scope
    description: Ограниченный контекст
  - name: package
    description: Пакеты выражений
  - name: users
    description: Пользователи
paths:
  /key:
    get:
      tags:
        - key
      summary: получение ключа
      description: получение ключа для верификации JWT
      operationId: getKey
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /action/:
    post:
      tags:
        - action
      summary: Регистрация действия
      description: Регистрация действия
      operationId: addAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequest'
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    get:
      tags:
        - action
      summary: Список действия
      description: Список действия
      operationId: getAll
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /order/action:
    post:
      tags:
        - order_action
      summary: Обработка сообщений
      description: Обработка сообщений
      operationId: processMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderActionRequest'
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderActionResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /scope/:
    get:
      tags:
        - scope
      summary: Список контекстов
      description: Получение списка контекстов
      operationId: getScopes
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
        - scope
      summary: Новый контекст
      description: Создание нового контекста
      operationId: createScopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeRequest'
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /package/:
    get:
      tags:
        - package
      summary: Пакеты выражений
      description: Список пакета выражений
      operationId: getPackages
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackagesGroupResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /user/:
    get:
      tags:
        - users
      summary: Список список пользователей
      description: Получение списка контекстов
      operationId: getUsers
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
        - users
      summary: Новый пользователь
      description: Создание нового пользователя
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /user/{id}:
    put:
      tags:
        - users
      summary: Новый пользователь
      description: Создание нового пользователя
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: id пользователя
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /user/{id}/scope/{scope}:
    put:
      tags:
        - users
      summary: Сменить область видимости
      description: Сменить область видимости
      operationId: changeScope
      parameters:
        - name: id
          in: path
          description: id пользователя
          required: true
          schema:
            type: string
        - name: scope
          in: path
          description: Область видимости
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /token/{scope}:
    get:
      tags:
        - token
      summary: Токена с контекстом
      description: Получить токен
      operationId: getToken
      parameters:
        - name: scope
          in: path
          description: контекст
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: ошибка запроса
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      security:
        - bearerAuth: [ ]
components:
  schemas:
    KeyResponse:
      type: object
      properties:
        key:
          title: Ключ для верификации JWT
          type: string
    Errors:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            example: Описание ошибки
            type: string
    TokenResponse:
      type: object
      properties:
        scope:
          title: контекст
          type: string
          example: customer
        token:
          title: токен
          type: string
    OrderActionResponse:
      type: object
      properties:
        status:
          title: Статус
          type: string
          example: ACCEPTED
        message:
          type: object
          additionalProperties:
            type: object
    OrderActionRequest:
      type: object
      title: Сообщение
      properties:
        guid:
          title: guid сообщения
          type: string
          format: uuid
        token:
          title: токен
          type: string
        order:
          title: id заказа
          type: string
          example: 1
        action:
          title: id команды
          type: integer
          format: int64
          example: 0
        args:
          additionalProperties:
            type: string
    ScopeResponse:
      type: object
      title: Контекст
      properties:
        id:
          title: id контекста
          type: string
        name:
          title: Название
          type: string
          example: user
        description:
          title: Название
          type: string
          example: user
        packages:
          title: Доступные пакеты
          type: array
          items:
            type: string
    ScopeRequest:
      type: object
      title: Контекст
      properties:
        name:
          title: Название
          type: string
          example: user
        description:
          title: Название
          type: string
          example: Контекст для простого пользователя
        packages:
          title: Доступные пакеты
          type: array
          items:
            type: string
    PackagesGroupResponse:
      type: object
      title: Группа пакетов выражений
      properties:
        name:
          title: Название
          type: string
          example: createOrder
        description:
          title: Описание
          type: string
          example: Создание заказа
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageResponse'
    PackageResponse:
      type: object
      title: Пакет выражений
      properties:
        name:
          title: Название
          type: string
          example: createOrderByUser
        description:
          title: Описание
          type: string
          example: Создание заказа пользователем по умолчанию
    UserRequest:
      type: object
      title: Пользователь
      required:
        - login
        - password
        - passwordConfirmation
      properties:
        name:
          title: Имя
          type: string
        login:
          title: login
          type: string
        password:
          title: пароль
          type: string
        passwordConfirmation:
          title: подтверждение пароля
          type: string
        accesses:
          title: список доступов
          type: array
          items:
            type: string
            enum:
              - ADMIN
              - USER
        scopes:
          title: список контекстов
          type: array
          items:
            type: string
    UserResponse:
      type: object
      title: Пользователь
      properties:
        id:
          title: id пользователя
          type: string
        name:
          title: Имя
          type: string
        login:
          title: login
          type: string
        currentScope:
          title: Текущая область видимости
          type: string
        accesses:
          title: список доступов
          type: array
          items:
            type: string
            enum:
              - ADMIN
              - USER
        scopes:
          title: список контекстов
          type: array
          items:
            type: string
    ActionRequest:
      type: object
      title: Действие
      properties:
        actionId:
          title: id действия
          type: integer
          format: int64
        expression:
          title: выражение
          type: string
    ActionResponse:
      type: object
      title: Действие
      properties:
        actionId:
          title: id действия
          type: integer
          format: int64
        expression:
          title: выражение
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT